# Generated by Django 4.0.4 on 2023-10-25 16:33

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('bhtom_targets', '0001_initial'),
    ]

    operations = [
        migrations.AlterField(
            model_name='target',
            name='cadence_priority',
            field=models.FloatField(blank=True, default=0, null=True, verbose_name='cadence priority'),
        ),
        migrations.AlterField(
            model_name='target',
            name='classification',
            field=models.CharField(blank=True, choices=[('Unknown', 'Unknown'), ('Be-star outburst', 'Be-star outburst'), ('AGN', 'Active Galactic Nucleus(AGN)'), ('BL Lac', 'BL Lac'), ('CV', 'Cataclysmic Variable(CV)'), ('CEPH', 'Cepheid Variable(CEPH)'), ('EB', 'Eclipsing Binary(EB)'), ('Galaxy', 'Galaxy'), ('LPV', 'Long Period Variable(LPV)'), ('LBV', 'Luminous Blue Variable(LBV)'), ('M-dwarf flare', 'M-dwarf flare'), ('Microlensing Event', 'Microlensing Event'), ('Nova', 'Nova'), ('Peculiar Supernova', 'Peculiar Supernova'), ('QSO', 'Quasar(QSO)'), ('RCrB', 'R CrB Variable'), ('RR Lyrae Variable', 'RR Lyrae Variable'), ('SSO', 'Solar System Object(SSO)'), ('Star', 'Star'), ('SN', 'Supernova(SN)'), ('Supernova imposter', 'Supernova imposter'), ('Symbiotic star', 'Symbiotic star'), ('TDE', 'Tidal Disruption Event(TDE)'), ('Variable star-other', 'Variable star-other'), ('XRB', 'X-Ray Binary(XRB)'), ('YSO', 'Young Stellar Object(YSO)')], db_index=True, help_text='Classification of the object (e.g. variable star, microlensing event)', max_length=50, null=True, verbose_name='classification'),
        ),
        migrations.AlterField(
            model_name='target',
            name='description',
            field=models.CharField(blank=True, db_index=True, max_length=200, null=True, verbose_name='description'),
        ),
        migrations.AlterField(
            model_name='target',
            name='filter_last',
            field=models.CharField(blank=True, default='', max_length=20, null=True, verbose_name='last filter'),
        ),
        migrations.AlterField(
            model_name='target',
            name='galactic_lat',
            field=models.FloatField(blank=True, db_index=True, help_text='Galactic Latitude in degrees.', null=True, verbose_name='Galactic Latitude'),
        ),
        migrations.AlterField(
            model_name='target',
            name='galactic_lng',
            field=models.FloatField(blank=True, db_index=True, help_text='Galactic Longitude in degrees.', null=True, verbose_name='Galactic Longitude'),
        ),
        migrations.AlterField(
            model_name='target',
            name='importance',
            field=models.FloatField(db_index=True, default=0, help_text='Target importance as an integer 0-10 (10 is the highest)', verbose_name='importance'),
        ),
        migrations.AlterField(
            model_name='target',
            name='mag_last',
            field=models.FloatField(blank=True, db_index=True, default=100, null=True, verbose_name='mag last'),
        ),
        migrations.AlterField(
            model_name='target',
            name='mjd_last',
            field=models.FloatField(blank=True, default=0, null=True, verbose_name='mjd last'),
        ),
        migrations.AlterField(
            model_name='target',
            name='priority',
            field=models.FloatField(blank=True, db_index=True, default=0, null=True, verbose_name='priority'),
        ),
        migrations.AlterField(
            model_name='target',
            name='sun_separation',
            field=models.FloatField(blank=True, db_index=True, null=True, verbose_name='sun separation'),
        ),
        migrations.AlterField(
            model_name='target',
            name='type',
            field=models.CharField(choices=[('SIDEREAL', 'Sidereal'), ('NON_SIDEREAL', 'Non-sidereal')], db_index=True, help_text='The type of this target.', max_length=100, verbose_name='Target Type'),
        ),
        migrations.CreateModel(
            name='TargetGaiaDr3',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_id', models.BigIntegerField(db_index=True, unique=True, verbose_name='Source Id')),
                ('parallax', models.FloatField(blank=True, null=True, verbose_name='Parallax')),
                ('parallax_error', models.FloatField(blank=True, null=True, verbose_name='Parallax Error')),
                ('pmra', models.FloatField(blank=True, null=True, verbose_name='pmra')),
                ('pmra_error', models.FloatField(blank=True, null=True, verbose_name='pmra Error')),
                ('pmdec', models.FloatField(blank=True, null=True, verbose_name='pmdec')),
                ('pmdec_error', models.FloatField(blank=True, null=True, verbose_name='pmdec Error')),
                ('ruwe', models.FloatField(blank=True, null=True, verbose_name='ruwe')),
                ('astrometric_excess_noise', models.FloatField(blank=True, null=True, verbose_name='Astrometric Excess Noise')),
                ('r_med_geo', models.FloatField(blank=True, null=True, verbose_name='r_med_geo')),
                ('r_lo_geo', models.FloatField(blank=True, null=True, verbose_name='r_lo_geo')),
                ('r_hi_geo', models.FloatField(blank=True, null=True, verbose_name='r_hi_geo')),
                ('r_med_photogeo', models.FloatField(blank=True, null=True, verbose_name='r_med_photogeo')),
                ('r_lo_photogeo', models.FloatField(blank=True, null=True, verbose_name='r_lo_photogeo')),
                ('r_hi_photogeo', models.FloatField(blank=True, null=True, verbose_name='r_hi_photogeo')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='The time which this target name was created.')),
                ('modified', models.DateTimeField(auto_now=True, help_text='The time which this target GaiaDr3 was changed in the TOM database.', verbose_name='Last Modified')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dr3', to='bhtom_targets.target')),
            ],
        ),
        migrations.CreateModel(
            name='TargetGaiaDr2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_id', models.BigIntegerField(db_index=True, unique=True, verbose_name='Source Id')),
                ('parallax', models.FloatField(blank=True, null=True, verbose_name='Parallax')),
                ('parallax_error', models.FloatField(blank=True, null=True, verbose_name='Parallax Error')),
                ('pmra', models.FloatField(blank=True, null=True, verbose_name='pmra')),
                ('pmra_error', models.FloatField(blank=True, null=True, verbose_name='pmra Error')),
                ('pmdec', models.FloatField(blank=True, null=True, verbose_name='pmdec')),
                ('pmdec_error', models.FloatField(blank=True, null=True, verbose_name='pmdec Error')),
                ('ruwe', models.FloatField(blank=True, null=True, verbose_name='ruwe')),
                ('astrometric_excess_noise', models.FloatField(blank=True, null=True, verbose_name='Astrometric Excess Noise')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='The time which this target name was created.')),
                ('modified', models.DateTimeField(auto_now=True, help_text='The time which this target GaiaDr3 was changed in the TOM database.', verbose_name='Last Modified')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dr2', to='bhtom_targets.target')),
            ],
        ),
    ]
